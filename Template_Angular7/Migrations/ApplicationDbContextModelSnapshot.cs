// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Template_Angular7.Data;

namespace Template_Angular7.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Template_Angular7.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DisplayName");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<int>("Flags");

                    b.Property<DateTime>("LastModifiedDate");

                    b.Property<string>("Notes");

                    b.Property<int>("Type");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("TUsers");
                });

            modelBuilder.Entity("Template_Angular7.Data.CodeAktivitaeten", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bezeichnung")
                        .IsRequired();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Farbe")
                        .IsRequired();

                    b.Property<bool>("GanzerTag");

                    b.Property<int>("GruppenId");

                    b.Property<DateTime>("LastModifiedDate");

                    b.Property<bool>("Summieren");

                    b.Property<DateTime>("ZeitBeginn");

                    b.Property<DateTime>("ZeitEnde");

                    b.Property<bool>("ZeitUnbestimmt");

                    b.HasKey("Id");

                    b.HasIndex("GruppenId");

                    b.ToTable("TAktivitaeten");
                });

            modelBuilder.Entity("Template_Angular7.Data.Gruppe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Aktiv");

                    b.Property<string>("Beschreibung");

                    b.Property<string>("Bezeichnung");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("LastModifiedDate");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TGruppen");
                });

            modelBuilder.Entity("Template_Angular7.Data.LoginBenutzer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<DateTime>("LastModifiedDate");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("TLoginBenutzer");
                });

            modelBuilder.Entity("Template_Angular7.Data.Teilnehmer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Berechtigungen");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("GruppenId");

                    b.Property<DateTime>("LastModifiedDate");

                    b.Property<string>("Nachname")
                        .IsRequired();

                    b.Property<string>("Vorname")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("GruppenId");

                    b.ToTable("TTeilnehmer");
                });

            modelBuilder.Entity("Template_Angular7.Data.Termin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DatumBeginn");

                    b.Property<DateTime>("DatumEnde");

                    b.Property<bool>("GanzerTag");

                    b.Property<string>("Hinweis");

                    b.Property<int>("IdAktivitaet");

                    b.Property<int>("IdGruppe");

                    b.Property<int>("IdTeilnehmer");

                    b.Property<int>("IdTermin");

                    b.Property<DateTime>("LastModifiedDate");

                    b.HasKey("Id");

                    b.HasIndex("IdAktivitaet");

                    b.HasIndex("IdGruppe");

                    b.HasIndex("IdTeilnehmer");

                    b.ToTable("TTermine");
                });

            modelBuilder.Entity("Template_Angular7.Data.CodeAktivitaeten", b =>
                {
                    b.HasOne("Template_Angular7.Data.Gruppe", "Gruppe")
                        .WithMany("CodesAktivitaeten")
                        .HasForeignKey("GruppenId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Template_Angular7.Data.Gruppe", b =>
                {
                    b.HasOne("Template_Angular7.Data.ApplicationUser", "User")
                        .WithMany("Gruppen")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Template_Angular7.Data.Teilnehmer", b =>
                {
                    b.HasOne("Template_Angular7.Data.Gruppe", "Gruppe")
                        .WithMany("Teilnehmer")
                        .HasForeignKey("GruppenId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Template_Angular7.Data.Termin", b =>
                {
                    b.HasOne("Template_Angular7.Data.CodeAktivitaeten", "CodesAktivitaeten")
                        .WithMany("Termine")
                        .HasForeignKey("IdAktivitaet")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Template_Angular7.Data.Gruppe", "Gruppe")
                        .WithMany("Termine")
                        .HasForeignKey("IdGruppe")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Template_Angular7.Data.Teilnehmer", "Teilnehmer")
                        .WithMany("Termine")
                        .HasForeignKey("IdTeilnehmer")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
